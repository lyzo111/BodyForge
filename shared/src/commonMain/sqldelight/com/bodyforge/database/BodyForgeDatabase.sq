-- BodyForge Complete Database Schema

-- Exercises Table
CREATE TABLE Exercise (
    id TEXT NOT NULL PRIMARY KEY,
    name TEXT NOT NULL,
    muscle_groups TEXT NOT NULL, -- JSON array as string
    instructions TEXT NOT NULL DEFAULT '',
    equipment_needed TEXT NOT NULL DEFAULT '',
    is_custom INTEGER NOT NULL DEFAULT 0, -- Boolean as Int (0/1)
    is_bodyweight INTEGER NOT NULL DEFAULT 0, -- Boolean as Int (0/1)
    default_rest_time_seconds INTEGER NOT NULL DEFAULT 90
);

-- Workouts Table
CREATE TABLE Workout (
    id TEXT NOT NULL PRIMARY KEY,
    name TEXT NOT NULL,
    started_at INTEGER NOT NULL, -- Unix timestamp in seconds
    finished_at INTEGER, -- NULL if active, timestamp if finished
    notes TEXT NOT NULL DEFAULT ''
);

-- Workout Sets Table
CREATE TABLE WorkoutSet (
    id TEXT NOT NULL PRIMARY KEY,
    workout_id TEXT NOT NULL,
    exercise_id TEXT NOT NULL,
    order_in_workout INTEGER NOT NULL,
    set_number INTEGER NOT NULL, -- 1, 2, 3...
    reps INTEGER NOT NULL DEFAULT 0,
    weight_kg REAL NOT NULL DEFAULT 0.0,
    rest_time_seconds INTEGER NOT NULL DEFAULT 90,
    completed INTEGER NOT NULL DEFAULT 0, -- Boolean as Int
    completed_at INTEGER, -- Unix timestamp when completed
    notes TEXT NOT NULL DEFAULT '',
    FOREIGN KEY (workout_id) REFERENCES Workout(id) ON DELETE CASCADE,
    FOREIGN KEY (exercise_id) REFERENCES Exercise(id) ON DELETE CASCADE
);

-- Nutrition Log Table
CREATE TABLE NutritionLog (
    id TEXT NOT NULL PRIMARY KEY,
    date INTEGER NOT NULL, -- Unix timestamp (date only)
    food_name TEXT NOT NULL,
    calories_per_100g REAL NOT NULL,
    protein_per_100g REAL NOT NULL DEFAULT 0.0,
    carbs_per_100g REAL NOT NULL DEFAULT 0.0,
    fat_per_100g REAL NOT NULL DEFAULT 0.0,
    amount_grams REAL NOT NULL,
    meal_type TEXT NOT NULL DEFAULT 'other', -- breakfast, lunch, dinner, snack, other
    created_at INTEGER NOT NULL -- Unix timestamp when logged
);

-- Sleep Log Table
CREATE TABLE SleepLog (
    id TEXT NOT NULL PRIMARY KEY,
    date INTEGER NOT NULL, -- Unix timestamp (date only)
    bedtime INTEGER NOT NULL, -- Unix timestamp
    wake_time INTEGER NOT NULL, -- Unix timestamp
    sleep_quality INTEGER NOT NULL DEFAULT 5, -- 1-10 scale
    notes TEXT NOT NULL DEFAULT '',
    created_at INTEGER NOT NULL -- Unix timestamp when logged
);

-- Pre-populate with standard exercises
INSERT INTO Exercise (id, name, muscle_groups, instructions, equipment_needed, is_custom, is_bodyweight, default_rest_time_seconds) VALUES
-- Compound Movements
('bench_press', 'Bench Press', '["Chest", "Triceps"]', 'Lie on bench, press barbell from chest to full arm extension', 'Barbell', 0, 0, 120),
('squat', 'Squat', '["Quadriceps", "Glutes"]', 'Stand with feet shoulder-width apart, lower until thighs parallel to ground', 'Barbell', 0, 0, 180),
('deadlift', 'Deadlift', '["Back", "Hamstrings"]', 'Lift barbell from floor to hip level with straight back', 'Barbell', 0, 0, 180),
('overhead_press', 'Overhead Press', '["Shoulders", "Triceps"]', 'Press barbell from shoulder level to overhead', 'Barbell', 0, 0, 120),
('barbell_row', 'Barbell Row', '["Back", "Biceps"]', 'Bend over, pull barbell to lower chest', 'Barbell', 0, 0, 120),

-- Bodyweight Exercises
('pull_ups', 'Pull-ups', '["Back", "Biceps"]', 'Hang from bar, pull body up until chin over bar', 'Pull-up Bar', 0, 1, 120),
('chin_ups', 'Chin-ups', '["Back", "Biceps"]', 'Hang from bar with palms facing you, pull up', 'Pull-up Bar', 0, 1, 120),
('dips', 'Dips', '["Chest", "Triceps"]', 'Lower body between parallel bars, push back up', 'Dip Bar', 0, 1, 90),
('push_ups', 'Push-ups', '["Chest", "Triceps"]', 'Lower body to ground, push back up', 'None', 0, 1, 60),

-- Isolation Exercises
('lateral_raises', 'Lateral Raises', '["Shoulders"]', 'Raise dumbbells to shoulder height from sides', 'Dumbbells', 0, 0, 60),
('cable_chest_fly', 'Cable Chest Fly', '["Chest"]', 'Pull cables from high position across chest', 'Cable Machine', 0, 0, 60),
('leg_extension', 'Leg Extension', '["Quadriceps"]', 'Extend legs from seated position against resistance', 'Leg Extension Machine', 0, 0, 60),
('leg_curl', 'Leg Curl', '["Hamstrings"]', 'Curl legs towards glutes against resistance', 'Leg Curl Machine', 0, 0, 60),

-- Additional Popular Exercises
('incline_bench_press', 'Incline Bench Press', '["Chest", "Triceps"]', 'Press barbell on inclined bench', 'Barbell', 0, 0, 120),
('decline_bench_press', 'Decline Bench Press', '["Chest", "Triceps"]', 'Press barbell on declined bench', 'Barbell', 0, 0, 120),
('dumbbell_press', 'Dumbbell Press', '["Chest", "Triceps"]', 'Press dumbbells from chest', 'Dumbbells', 0, 0, 90),
('shoulder_shrugs', 'Shoulder Shrugs', '["Traps"]', 'Lift shoulders up and back down with weight', 'Dumbbells', 0, 0, 60),
('bicep_curls', 'Bicep Curls', '["Biceps"]', 'Curl dumbbells up to shoulders', 'Dumbbells', 0, 0, 60),
('tricep_pushdowns', 'Tricep Pushdowns', '["Triceps"]', 'Push cable down with triceps', 'Cable Machine', 0, 0, 60),
('calf_raises', 'Calf Raises', '["Calves"]', 'Raise up onto toes', 'None', 0, 1, 45),
('planks', 'Planks', '["Core"]', 'Hold body straight in plank position', 'None', 0, 1, 30);

-- EXERCISE QUERIES

selectAllExercises:
SELECT * FROM Exercise ORDER BY name;

selectExerciseById:
SELECT * FROM Exercise WHERE id = ?;

selectExercisesByMuscleGroup:
SELECT * FROM Exercise WHERE muscle_groups LIKE '%' || ? || '%';

searchExercises:
SELECT * FROM Exercise WHERE name LIKE '%' || ? || '%';

selectCustomExercises:
SELECT * FROM Exercise WHERE is_custom = 1;

insertExercise:
INSERT INTO Exercise (id, name, muscle_groups, instructions, equipment_needed, is_custom, is_bodyweight, default_rest_time_seconds)
VALUES (?, ?, ?, ?, ?, ?, ?, ?);

deleteCustomExercise:
DELETE FROM Exercise WHERE id = ? AND is_custom = 1;

-- WORKOUT QUERIES

insertWorkout:
INSERT INTO Workout (id, name, started_at, finished_at, notes)
VALUES (?, ?, ?, ?, ?);

updateWorkout:
UPDATE Workout SET name = ?, started_at = ?, finished_at = ?, notes = ? WHERE id = ?;

selectWorkoutById:
SELECT id, name, started_at, finished_at, notes FROM Workout WHERE id = ?;

selectAllWorkouts:
SELECT id, name, started_at, finished_at, notes FROM Workout ORDER BY started_at DESC;

selectCompletedWorkouts:
SELECT id, name, started_at, finished_at, notes FROM Workout
WHERE finished_at IS NOT NULL
ORDER BY started_at DESC;

selectActiveWorkout:
SELECT id, name, started_at, finished_at, notes FROM Workout
WHERE finished_at IS NULL
LIMIT 1;

finishAllActiveWorkouts:
UPDATE Workout SET finished_at = ? WHERE finished_at IS NULL;

updateOrphanedWorkouts:
UPDATE Workout SET finished_at = ? WHERE finished_at IS NULL;

selectWorkoutsByDateRange:
SELECT * FROM Workout
WHERE started_at >= ? AND started_at <= ?
ORDER BY started_at DESC;

deleteWorkout:
DELETE FROM Workout WHERE id = ?;

-- WORKOUT SET QUERIES

insertWorkoutSet:
INSERT INTO WorkoutSet (id, workout_id, exercise_id, order_in_workout, set_number, reps, weight_kg, rest_time_seconds, completed, completed_at, notes)
VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

updateWorkoutSet:
UPDATE WorkoutSet SET reps = ?, weight_kg = ?, rest_time_seconds = ?, completed = ?, completed_at = ?, notes = ?
WHERE id = ?;

selectSetsForWorkout:
SELECT * FROM WorkoutSet WHERE workout_id = ? ORDER BY order_in_workout, set_number;

selectSetsForExerciseInWorkout:
SELECT * FROM WorkoutSet WHERE workout_id = ? AND exercise_id = ? ORDER BY set_number;

deleteSetsForWorkout:
DELETE FROM WorkoutSet WHERE workout_id = ?;

-- NUTRITION QUERIES

insertNutritionLog:
INSERT INTO NutritionLog (id, date, food_name, calories_per_100g, protein_per_100g, carbs_per_100g, fat_per_100g, amount_grams, meal_type, created_at)
VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

selectNutritionLogsByDate:
SELECT * FROM NutritionLog WHERE date = ? ORDER BY created_at;

selectNutritionLogsByDateRange:
SELECT * FROM NutritionLog WHERE date >= ? AND date <= ? ORDER BY date DESC, created_at;

deleteNutritionLog:
DELETE FROM NutritionLog WHERE id = ?;

selectDailyNutritionSummary:
SELECT
    date,
    SUM(calories_per_100g * amount_grams / 100.0) AS totalCalories,
    SUM(protein_per_100g * amount_grams / 100.0) AS totalProtein,
    SUM(carbs_per_100g * amount_grams / 100.0) AS totalCarbs,
    SUM(fat_per_100g * amount_grams / 100.0) AS totalFat
FROM NutritionLog
WHERE date >= ? AND date <= ?
GROUP BY date
ORDER BY date DESC;

-- SLEEP QUERIES

insertSleepLog:
INSERT INTO SleepLog (id, date, bedtime, wake_time, sleep_quality, notes, created_at)
VALUES (?, ?, ?, ?, ?, ?, ?, ?);

selectSleepLogsByDateRange:
SELECT * FROM SleepLog WHERE date >= ? AND date <= ? ORDER BY date DESC;

selectSleepLogByDate:
SELECT * FROM SleepLog WHERE date = ?;

updateSleepLog:
UPDATE SleepLog SET bedtime = ?, wake_time = ?, sleep_quality = ?, notes = ? WHERE id = ?;

deleteSleepLog:
DELETE FROM SleepLog WHERE id = ?;